<resources>
    <string name="app_name">Android开发学习</string>

    <!--Create操作符信息-->
    <string name="create_operate_info">
        create操作符主要用于产生一个Observable被观察者对象，也可以成为发射器（上游事件）,
        与之对应的观察者Observer称为接收器(下游事件)
    </string>

    <string name="map_operate_info">
        Map操作符的作用是对发射事件发送每一个事件应用一个函数，使得每一个事件都按照指定的函数去变化
    </string>

    <string name="zip_operate_info">
        Zip操作符用于合并事件，该合并并不是连接，而是两两配对，也就意味着，最终配对出的Observable发射
        事件的数目只和少的那个相同
    </string>

    <string name="concat_operate_info">
        Concat操作符用于将两个发射器合并成一个发射器
    </string>

    <string name="flat_map_operate_info">
        flatMap可以把一个发射器Observable通过某种方法转换为多个Observables，然后再把这些分散的Observables
        装进一个单一的发射器Observable，但是需要注意的是，flatMap并不能保证事件的顺序。
    </string>

    <string name="concat_map_operate_info">
        concatMap和flatMap的作用是一样的，不同之处在于保证了时间发送的顺序。
    </string>

    <string name="distinct_operate_info">
        distinct操作符的作用是去重。
    </string>

    <string name="filter_operate_info">
        filter操作符可以根据我们设置的条件过滤掉不符合条件的事件。
    </string>

    <string name="buffer_operate_info">
        buffer操作符接受两个参数，buffer(count,skip)，作用是将Observable中的数据按skip(步长)
        分成最多是不超过count的buffer，然后生成一个Observable.
    </string>

    <string name="timer_operate_info">
        timer相当于一个定时任务，需要注意的是,timer默认在新线程中。
    </string>

    <string name="interval_operate_info">
        interval操作符用于间隔一段时间执行某个操作,和timer一样，默认在新线程中执行。
    </string>

    <string name="doOnNext_operate_info">
        doNext操作符用于在订阅者接收到数据之前做一些开发者自定义的操作，例如保存数据。
    </string>

    <string name="skip_operate_info">
        skip操作符用于跳过前面多少个数目开始接收。
    </string>

    <string name="take_operate_info">
        take操作符用于表示至多接收多少个数据.
    </string>

    <string name="just_operate_info">
        just操作符的作用就是一个发射器依次调用onNext()方法
    </string>

    <string name="Single_operator_info">
        Single只会接收一个参数，而SingleObserver只会调用onError()或者onSuccess.
    </string>

    <string name="debounce_operator_info">
        debounce用于去除那些发送频率过快的项。
    </string>

    <string name="defer_operator_info">
        defer操作符每次发送数据都会创建一个新的Observable,并且在没有被订阅，就不会产生新的Observable.
    </string>

    <string name="last_operator_info">
        last操作符仅取出可观察到的最后一个值，或者是满足某些条件的最后一项。
    </string>

    <string name="merge_operator_info">
        merge操作符的作用是把多个Observable结合起来，接收可变参数，也支持迭代集合，他和concat的区别在于，不用等到发射器A
        发送完所有事件再进行发射器B的发送
    </string>

    <string name="reduce_operator_info">
        reduce操作符每次用一个方法处理一个值，可以有一个Seed作为初始值
    </string>

    <string name="scan_operator_info">
        scan操作符和reduce操作符的功能相似，但是reduce只会输出最终的结果值，但是scan会将每一步执行的结果都进行输出。
    </string>

    <string name="window_operator_info">
        按照实际划分窗口，将数据发送给不同的observable.
    </string>
    <string name="title_activity_rx_java_study_transform_operator">
        RxJavaStudyTransformOperatorActivity
    </string>
</resources>
